Hello everyone. So today we're going to build another integration app for the OMI ecosystem. Last time we built an integration app that used the memory creation trigger. Basically every time OMI processes a memory, it sends us a message to our own API and we can then do whatever we want with that trigger. It's our own code, our own API, we can build our own for them on top of that. We saw how we can deploy to AWS, so it will be available on the internet properly. And we also saw how we can run the API locally on our computer and also use Ngrok to make it accessible on the internet. So I would recommend watching those two videos before watching this one because I will be referring to some stuff we talked about in those videos. Okay, so again, in this video, we're going to do the real-time transcription processor. In this case, we're going to have an API endpoint that's going to be triggered by the OMI backend every time there is a new text that was generated. So instead of having access to a memory, which is a post-processing, so after OMI processed the transcription from the wearable, it tried to find memories and things like that. no in this time uh this time we're going to use the real time transcription we're going to get access directly to whatever is being said uh next to the necklace um just for fun i'm going to make make it so every time uh someone mentioned a cookie or chocolate or anything like that um Omi is going to send me an identification saying Adam, no. The cool part about this is that I'm going to keep all of this private. So I'm not going to public to make this app public on the Omi app store. I'm only going to use this for my own use case and I'm going to run the API on my computer. So it's cool because you can develop apps for a lot of other, a lot of people, and you can also develop apps for yourself. This is talking to a lot of developers on the disco channel and in real life in San Francisco. uh this is what most people are interested in just to see how they can get access to the real time prescription uh to build their own use cases whether it is for i don't know restaurants or or doctors or a psychologist and stuff like that i think this tutorial will be very be very much relevant um so we're going to base our code uh based on the old code that we had before so basically we're going to import fast api at this first api in uvcon uh we're going to import that create an app instance and then we're going to have the old web book let's just copy it to let's copy it here uh this is the old web book let's create a new one let's call it live script and we're going to in this time going to let's see now let's look on the so it's we need to make an endpoint that is a post request also get no this is still memory creation sorry a post request to our endpoint that get a user id session id and again dictionary which is a list of dictionaries each dictionary will have like a text and cool all right so let's do it so create a new new post transcript let's change the transcript a user id the same uh cool so now just to test it out let's then print it already directly okay just let let's uh let just let let print the transcription as we get it so we know how to work with it so we have this it's super simple um we're going to run it so python3 test api right now the api is running locally and we're going to use ngrok like in the previous tutorial to run to open our local host port 8000 to the internet in this url and then i'm going to send this url to my phone so i can open it in my omia okay now that i copied the stuff to my phone let's open the omia app it's going to connect to my wearable it's connecting okay connected now let's go to apps let's create a new app that's an image here is an image of me brushing my teeth let's call it adam didn't no cookie cookies please although i really like cookies but okay app category safety and security and help adam not eat cookies and then also forgot we need to enable app capability external integration and then in the trigger we're going to choose a transcript process basically unlike the previous one we where we chose memory creation we're going to choose transcript and webbook URL we're going to paste our URL and at the end we just need to make sure we are adding the right URL which is live transcript it's correct and then cool see I'm not making it public so it's only available for me submitting nice and now i need to find it and make sure it is installed here we go i don't know cookies please install up now it needs to be installed now we can go to memories and we should start seeing segments being sent to our stuff oh okay we already seen a segment oh here we go hello my name is adam and i am the king let's see here we go hello and i adam and and i'm the king okay now that we're getting text as you can see we get like a dictionary and stuff like that now let's make sure we let's add some stuff okay it's not so complete okay basically if cookies if the if the string cookie is any in any one of the text I get in the segment, the message will be Adam, no. That's it. And basically the message we send here will be sent back to OMI servers and OMI server will send that as a success request cool all right now we need to run it again clear okay now okay basically i think if i'm going to say adam they want a cookie let's see adam do you want a cookie does not seem to work cookie adam they want some cookie cookie cookie right i don't see the identification why is that let's see right for segment in segment so the first segment okay let's do this I think I need to make sure it's slower let's find again Adam do you want some cookies Adam do you want a cookie hmm okay we do get the segments and it should be there and then cookie let me think let's let's let's do this let's add some prints to make sure we understand what is going on also let's remove this because it is confusing right cookie I don't do want some cookies okay I think it is understanding let's see I don't you want a cookie please this is how real developers debug with prints not with debugger i don't do want some cookies i think you should cook is found yeah it does get into there okay so for some reason the notification is not working right let's see adam do you want some cookies yes yes do you want some cookies maybe maybe it is the 200 it doesn't like 200 for some reason maybe let's see adam do you want some cookies yeah okay do you see now uh adam do you want some cookies oh it's so funny um adam are you sure you don't want some cookies damn okay and that's it uh we found the bug for some reason uh i should not have returned the 200 here so yep that's that's all and that's it